---
title: "S&P500 Modeling"
author: "Kyle Cox"
date: "`r format(Sys.time(), '%B %d, %Y')`"
output:
  prettydoc::html_pretty:
    theme: cayman
    highlight: github
    toc: true
    toc_collapsed: true
toc_depth: 3
number_sections: true
---


# Objectives
 - Can we predict day-to-day movements in the S&P500?


```{r Rmd setup, echo=F}
knitr::opts_chunk$set(echo = F, message = F, error = F)
options(digits = 8)

```

```{r packages}
library(prettydoc)
library(ggplot2)
library(viridis)
library(reshape2)
library(ggcorrplot)
library(caret)

```

```{r functions}
source("./moving_average.R")
source("./rsi.R")
source("./derivative.R")

```

```{r load data}
sp500 <- read.csv("HistoricalPrices.csv")

```

```{r clean data}
sp500 <- janitor::clean_names(sp500)
sp500$date <- lubridate::mdy(sp500$date)

```

```{r modify data}
prev_day <- c(NA, sp500$close[1: (nrow(sp500) - 1)])

sp500$close_previous <- prev_day
sp500 <- na.omit(sp500)

sp500$change <- (sp500$close - sp500$close_previous) / sp500$close_previous
sp500$intraday_change <- (sp500$high - sp500$low) / sp500$high

sp500$ma5 <- moving_average(5, sp500$close)
sp500$ma8 <- moving_average(8, sp500$close)
sp500$ma13 <- moving_average(13, sp500$close)

sp500 <- cbind(sp500, macd(12, 26, 9, sp500$close))


sp500$rsi10 <- rsi(10, sp500$change)

# try adding derivatives
# first derivs
sp500$change_prime <- derivative(sp500$change)
sp500$intraday_change_prime <- derivative(sp500$intraday_change)
sp500$ma5_prime <- derivative(sp500$ma5)
sp500$ma8_prime <- derivative(sp500$ma8)
sp500$ma13_prime <- derivative(sp500$ma13)
sp500$rsi10_prime <- derivative(sp500$rsi10)
sp500$macd_prime <- derivative(sp500$macd)
sp500$macd_signal_prime <- derivative(sp500$macd_signal)

# second derivs
sp500$change_prime2 <- derivative(sp500$change_prime)
sp500$intraday_change_prime2 <- derivative(sp500$intraday_change_prime)
sp500$ma5_prime2 <- derivative(sp500$ma5_prime)
sp500$ma8_prime2 <- derivative(sp500$ma8_prime)
sp500$ma13_prime2 <- derivative(sp500$ma13_prime)
sp500$rsi10_prime2 <- derivative(sp500$rsi10_prime)
sp500$macd_prime2 <- derivative(sp500$macd_prime)
sp500$macd_signal_prime2 <- derivative(sp500$macd_signal_prime)


# logical comparisons
sp500$macd_greater <- as.numeric(sp500$macd > sp500$macd_signal)
sp500$ma5g8 <- as.numeric(sp500$ma5 > sp500$ma8)
sp500$ma5g13 <- as.numeric(sp500$ma5 > sp500$ma13)
sp500$ma8g13 <- as.numeric(sp500$ma8 > sp500$ma13)
sp500$rsi10_over <- as.numeric(sp500$rsi10 > 70)
sp500$rsi10_under <- as.numeric(sp500$rsi10 < 30)


sp500 <- na.omit(sp500)
```



```{r correlation}
sp500_num <- sp500; sp500_num$date <- NULL
X <- sp500_num[1: (nrow(sp500_num) - 1), ]
Y <- sp500_num$change[2: nrow(sp500_num)]

dat <- cbind(X, Y)

dat_cor <- cor(dat)
ggcorrplot(dat_cor)
```

```{r random forest}
set.seed(73)
inTraining <- createDataPartition(dat$Y, p = 0.8, list = F)
training <- dat[inTraining, ]
training <- dat[inTraining, ]
testing <- dat[-inTraining, ]

set.seed(730)
fitControl <- trainControl(method = "repeatedcv", number = 10, repeats = 10)

rfFit1 <- train(Y ~ ., data = training,
                method = "ranger", 
                trControl = fitControl)

```